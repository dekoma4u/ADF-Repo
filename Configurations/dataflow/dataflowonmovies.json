{
	"name": "dataflowonmovies",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "moviesnow",
						"type": "DatasetReference"
					},
					"name": "Moviesdata"
				},
				{
					"name": "genredata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "moviesparquet",
						"type": "DatasetReference"
					},
					"name": "sinkmovies",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"dataset": {
						"referenceName": "genrenow",
						"type": "DatasetReference"
					},
					"name": "sinkgenre",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Prop_0 as string,",
				"          id as integer,",
				"          original_title as string,",
				"          overview as string,",
				"          genre_ids as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Moviesdata",
				"source(output(",
				"          Prop_0 as string,",
				"          id as short,",
				"          name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false) ~> genredata",
				"Moviesdata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Prop_0,",
				"          id,",
				"          original_title,",
				"          overview,",
				"          genre_ids",
				"     )) ~> sinkmovies",
				"genredata sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Prop_0,",
				"          id,",
				"          name",
				"     )) ~> sinkgenre"
			]
		}
	}
}